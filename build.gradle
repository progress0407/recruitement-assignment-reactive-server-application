import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'org.jetbrains.kotlin.plugin.spring' version "$kotlinVersion"
    id 'org.jetbrains.kotlin.plugin.jpa' version "$kotlinVersion"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'

    group = 'io.philo'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '11'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        // kotlin
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation 'io.github.microutils:kotlin-logging-jvm:2.0.11'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

        // coroutine
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // kotest
        testImplementation 'io.kotest:kotest-runner-junit5:5.8.0'
        testImplementation 'io.kotest:kotest-assertions-core:5.8.0'

        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
        implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
        testImplementation 'io.projectreactor:reactor-test'

        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'io.r2dbc:r2dbc-h2'
        runtimeOnly 'org.postgresql:postgresql'
        runtimeOnly 'org.postgresql:r2dbc-postgresql'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        implementation 'com.google.code.gson:gson:2.10'
        testImplementation 'com.ninja-squad:springmockk:3.1.2'

        // jjwt
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        // for BCrypt
        implementation 'org.springframework.security:spring-security-core'
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += '-Xjsr305=strict'
            jvmTarget = '11'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

subprojects {
    bootJar.enabled = false
    jar.enabled = true
}

/* root project start */

bootJar.enabled = true
jar.enabled = true

dependencies {
    implementation project(":user")
    implementation project(":shop")
    implementation project(":query")
    implementation project(":common")
}

/* root project end */


project(':query') {
    dependencies {
        implementation project(":user")
        implementation project(":shop")
        implementation project(":common")
    }
}

project(':user') {
    dependencies {
        implementation project(':common')
    }
}

project(':shop') {
    dependencies {
        implementation project(':common')
    }
}

project(':common') {
}