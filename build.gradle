import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
	id 'org.jetbrains.kotlin.plugin.spring' version "$kotlinVersion"
	id 'org.jetbrains.kotlin.plugin.jpa' version "$kotlinVersion"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

allprojects {

	group = 'io.philo'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = '11'
	}

	repositories {
		mavenCentral()
	}

}

subprojects {

	apply plugin: 'java'
	apply plugin: 'org.jetbrains.kotlin.jvm'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.jetbrains.kotlin.plugin.spring'

	dependencies {
		implementation 'org.jetbrains.kotlin:kotlin-reflect'
		implementation 'io.github.microutils:kotlin-logging-jvm:2.0.11'

		// implementation 'org.springframework.boot:spring-boot-starter'
		// testImplementation 'org.springframework.boot:spring-boot-starter-test'

		testImplementation 'io.kotest:kotest-runner-junit5:5.8.0'
		testImplementation 'io.kotest:kotest-assertions-core:5.8.0'

		  implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'io.r2dbc:r2dbc-h2'
  runtimeOnly 'org.postgresql:postgresql'
  runtimeOnly 'org.postgresql:r2dbc-postgresql'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'
	}

	tasks.withType(KotlinCompile).configureEach {
		kotlinOptions {
			freeCompilerArgs += '-Xjsr305=strict'
			jvmTarget = '11'
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

